<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="MemberMapper">
	<!-- 로그인 -->
	<select id="login" parameterType="hashmap" resultType="MemberDTO">
    	select userID, passwd, name, email, post, addr1, addr2, phone
    	from member
    	where userID=#{userID} and passwd=#{passwd}
    </select>
    
    <!-- 회원가입  -->
    <insert id="register" parameterType="MemberDTO">
    insert into member(userID, passwd, name, email, post, addr1, addr2, phone, salt )
    values (#{userID},#{passwd},#{name},#{email},#{post},#{addr1},#{addr2},#{phone},#{salt})
    </insert>
    
    <!-- id 중복체크 -->
    <select id="idCheck" parameterType="string" resultType="MemberDTO">
    	select *
    	from member
    	where userID = #{userID}
    </select>
    
    <!-- 이메일 인증을 위한 랜덤번호 저장 -->
    <update id="updateMailKey" parameterType="MemberDTO">
	    update member set mail_key=#{mail_key} where email=#{email} and userID=#{userID}
	</update>
	
	<!-- 메일 인증 후 mail_auto 0 -> 1 변경 -->
	<update id="updateMailAuth" parameterType="MemberDTO">
	    update member set mail_auth=1 where userID=#{userID} and email=#{email}
	</update>
	
	<!-- 로그인 시 인증 유무 체크 -->
	<select id="emailAuthFail" parameterType="string" resultType="int">
	    select count(*) from member where userID=#{userID} and mail_auth=1
	</select>
	
	<!-- 이메일당 가입된 아이디 개수 -->
	<select id="idPerEmailCount" parameterType="string" resultType="int">
		select count(*)
		from member
		where email = #{email}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="MemberDTO" resultType="MemberDTO">
		select userID
		from member
		where name=#{name} and email=#{email} and phone=#{phone}
	</select>
	
	<!-- 비밀번호 찾기 - 아이디, 이메일 일치 확인 -->
	<select id="findPw_email" parameterType="MemberDTO" resultType="int">
		select count(*)
		from member
		where userID = #{userID} and email = #{email}
	</select>
	
	<!-- 인증키 일치 확인 -->
	<select id="checkKey" parameterType="MemberDTO" resultType="int">
		select count(*)
		from member
		where userID = #{userID} and email = #{email} and mail_key = #{mail_key}
	</select>
	
	<!-- 비밀번호 재설정 -->
	<update id="newPw" parameterType="MemberDTO">
		update member
		set passwd = #{passwd}, salt=#{salt}
		where userID = #{userID} and email = #{email}
	</update>
	
	<!-- 인증키 초기화 -->
	<update id="resetMailKey" parameterType="MemberDTO">
		update member
		set mail_key = null
		where userID = #{userID} and email = #{email}
	</update>
	
	<!-- salt값 가져오기 -->
	<select id="selectSalt" parameterType="string" resultType="string">
		select salt
		from member
		where userID = #{userID}
	</select>
	
	<!-- 회원탈퇴 - 비밀번호 일치 확인 -->
	<select id="checkPw" parameterType="hashmap" resultType="string">
		select passwd
		from member
		where userID=#{userID} and passwd=#{inputPw}
	</select>
</mapper>