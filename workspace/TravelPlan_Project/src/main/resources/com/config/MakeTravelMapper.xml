<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MakeTravelMapper">

	 <!-- api 데이터 삽입  -->
	<insert id="insertApi" parameterType="arraylist">
		insert all
		<foreach item="item" collection="list">
			into spot (title, addr1, addr2, mapx, mapy, areaCode, contentTypeid)
	  	        values (#{item.title},#{item.addr1},#{item.addr2},#{item.mapx},#{item.mapy},#{item.areaCode},#{item.contentTypeid})
		</foreach>
		select * from dual
	</insert>
	
	<!-- 중복 데이터 삭제 -->
	<delete id="deleteDuplication" parameterType="arraylist">
		delete from spot
		<where>
			<foreach item="item" collection="list" separator="or">
				title=#{item.title} and mapx like #{item.mapx}||'%' and mapy like #{item.mapy}||'%'
			</foreach>
		</where>
	</delete>
	
	<!-- 장소 찾기 -->
	<select id="findSpot" parameterType="map" resultType="SpotDTO">
		select *
		from spot
		where title=#{title}
	</select>
	
	<!-- 지역별 숙박/음식 시설 찾기 -->
	<select id="findHotelandFood" parameterType="map" resultType="SpotDTO">
		select *
		from spot
		where areaCode=#{areaCode} and contentTypeid=#{contentTypeid}
	</select>
	
	<!-- 관광정보 찾기 -->
	<select id="findSightseeing" parameterType="map" resultType="SpotDTO">
		select *
		from spot
		where areaCode=#{areaCode} and contentTypeid=#{contentTypeid3}
<!-- 		where areaCode=#{areaCode} and (contentTypeid=#{contentTypeid1} or contentTypeid=#{contentTypeid2} or contentTypeid=#{contentTypeid3} or contentTypeid=#{contentTypeid4} or contentTypeid=#{contentTypeid5}) -->
	</select>
	
	<!-- 일정만들기 저장 - travel테이블 -->
	<insert id="saveTravel" parameterType="TravelDTO">
		insert into travel(travelID, userID, SDate, EDate, travelTitle, areaCode, writedate, save)
	    values (TRAVEL_TRAVELID_SEQ.NEXTVAL, #{userID}, #{SDate}, #{EDate}, #{travelTitle}, #{areaCode}, SYSDATE, 'n')
	</insert>
	
	<!-- 테이블id 조회 -->
	<select id="selectTravelId" parameterType="TravelDTO" resultType="int">
		select travelID
		from travel
		where userID=#{userID} and SDate=#{SDate} and EDate=#{EDate} and travelTitle=#{travelTitle} and areaCode=#{areaCode} and save='n'
	</select>
	
	<!-- 일정 제목/날짜 수정 & 저장완료 -->
	<update id="travelSaveAndUpdate" parameterType="TravelDTO">
		update travel 
		set SDate=#{SDate}, EDate=#{EDate}, travelTitle=#{travelTitle}, save='y'
		where travelID=#{travelID}
	</update>
	
	<!-- 세부일정 저장 -->
	<insert id="saveSchedule" parameterType="arraylist">
		insert all
		<foreach item="item" collection="list">
			into plan (travelID, day_num, item, item_add, time)
	  	        values (#{item.travelID},#{item.day_num},#{item.item},#{item.item_add},#{item.time})
		</foreach>
		select * from dual
	</insert>
	
	<!-- 일정 만들기 페이지에서 벗어날 경우 travel save값을 n에서 y로 변경 -->
	<delete id="deleteTravelData" parameterType="int">
		delete from travel
		where travelID=#{travelID}
	</delete>
</mapper>