/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-21 00:25:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.goods;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.dto.CartDTO;
import java.util.List;

public final class cartList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/spring_study/apache-tomcat-9.0.78/webapps/ShopMiniMallSpringProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1694580395860L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.dto.CartDTO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.0/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Ajax 통해 수정버튼 활성화 -->\r\n");
      out.write("<script>\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		$(\".updateBtn\").on(\"click\", function(){\r\n");
      out.write("			var num = $(this).attr(\"data-num\"); // attr : 속성값을 가져옴\r\n");
      out.write("			var gAmount = $(\"#gAmount\"+num).val();\r\n");
      out.write("			\r\n");
      out.write("			//ajax 연동 - 수정버튼\r\n");
      out.write("			$.ajax({\r\n");
      out.write("                // 요청코드\r\n");
      out.write("                type:\"get\", // CartUpdateServlet으로 doget방식으로 url넘겨줌\r\n");
      out.write("                url:\"CartUpdateServlet\", // 버튼 눌렀을 때 이동할 곳 정하기\r\n");
      out.write("                data:{ // CartUpdateServlet 으로 넘겨줄 값\r\n");
      out.write("                	num:num,\r\n");
      out.write("                    gAmount:gAmount\r\n");
      out.write("                },\r\n");
      out.write("\r\n");
      out.write("                // 응답코드\r\n");
      out.write("                dataType:'text', // 응답받을 데이터 타입\r\n");
      out.write("                success:function(data, satatus, xhr) { \r\n");
      out.write("                	// 성공했을 때 합계를 수정해줘야함(수량이 변경되었기 때문)\r\n");
      out.write("                	var price = $(\"#gPrice\"+num).text(); // price값 가져오는 방법1\r\n");
      out.write("//                	var price2 = $(\"#sum\"+num).attr(\"data-price\"); // // price값 가져오는 방법2\r\n");
      out.write("                	\r\n");
      out.write("                    $(\"#sum\"+num).text(Number.parsInt(price)*Number.parsInt(gAmount));\r\n");
      out.write("                },\r\n");
      out.write("                error:function(xhr, status, error) {\r\n");
      out.write("                    console.log(\"에러발생\");\r\n");
      out.write("                }\r\n");
      out.write("            }); \r\n");
      out.write("		});// end updateBtn\r\n");
      out.write("		\r\n");
      out.write("		// 단일 삭제 버튼 이벤트\r\n");
      out.write("		$(\".deleteBtn\").on(\"click\", function(){\r\n");
      out.write("			var num = $(this).attr(\"data-num\"); // attr : 속성값을 가져옴\r\n");
      out.write("			//alert(num); // num값 확인\r\n");
      out.write("			location.href=\"CartDeleteServlet?num=\"+num; // 쿼리스트링으로 num값 넘겨줌\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 전체선택 이벤트 처리\r\n");
      out.write("		$(\"#allCheck\").on(\"click\", function(){\r\n");
      out.write("			// allCheck의 체크 여부 확인\r\n");
      out.write("//			alert(this.checked);\r\n");
      out.write("			var allCheck = this.checked; // allCheck의 상태 저장\r\n");
      out.write("			\r\n");
      out.write("			// 체크해야될 체크박스 얻기\r\n");
      out.write("//			var chk = $(\".check\"); // class가 check인 것들 배열로 반환\r\n");
      out.write("			\r\n");
      out.write("			$(\".check\").each(function(idx, ele){ // check반복\r\n");
      out.write("                this.checked = allCheck; // 각각의 체크박스들을 allcheck와 동일한 상태로 만듦\r\n");
      out.write("            });\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 전체 삭제\r\n");
      out.write("		// form 태그 밖에 있는 버튼을 form태그 안의 submit 버튼처럼 동작\r\n");
      out.write("		$(\"#deleteAll\").on(\"click\", function(){\r\n");
      out.write("			var f = $(\"form\")[0]; // 폼태그로 불러왔을 때 리스트로 가져오기 때문에 인덱스 지정해줌\r\n");
      out.write("			f.action=\"CartDeleteAllServlet\";\r\n");
      out.write("			f.method=\"get\";\r\n");
      out.write("			f.submit();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 주문 이벤트\r\n");
      out.write("		$(\".orderBtn\").on(\"click\", function(){\r\n");
      out.write("			var num = $(this).attr(\"data-num\");\r\n");
      out.write("			location.href=\"OrderConfirmServlet?num=\"+num;\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	}); \r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- JSTL 적용 -->\r\n");
      out.write("<table width=\"90%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\r\n");
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td height=\"30\">\r\n");
      out.write("	</tr>\r\n");
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"5\" class=\"td_default\">&nbsp;&nbsp;&nbsp; <font\r\n");
      out.write("			size=\"5\"><b>- 장바구니-</b></font> &nbsp;\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td height=\"15\">\r\n");
      out.write("	</tr>\r\n");
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"10\">\r\n");
      out.write("			<hr size=\"1\" color=\"CCCCCC\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td height=\"7\">\r\n");
      out.write("	</tr>\r\n");
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td class=\"td_default\" align=\"center\">\r\n");
      out.write("		\r\n");
      out.write("		<!-- 전체선택 체크 -> 체크박스 모두 체크 -->\r\n");
      out.write("		<input type=\"checkbox\" name=\"allCheck\" id=\"allCheck\"> <strong>전체선택</strong></td>\r\n");
      out.write("		\r\n");
      out.write("		<td class=\"td_default\" align=\"center\"><strong>주문번호</strong></td>\r\n");
      out.write("		<td class=\"td_default\" align=\"center\" colspan=\"2\"><strong>상품정보</strong></td>\r\n");
      out.write("		<td class=\"td_default\" align=\"center\"><strong>판매가</strong></td>\r\n");
      out.write("		<td class=\"td_default\" align=\"center\" colspan=\"2\"><strong>수량</strong></td>\r\n");
      out.write("		<td class=\"td_default\" align=\"center\"><strong>합계</strong></td>\r\n");
      out.write("		<td></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td height=\"7\">\r\n");
      out.write("	</tr>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"10\">\r\n");
      out.write("			<hr size=\"1\" color=\"CCCCCC\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<form name=\"myForm\">\r\n");
      out.write("<!-- 반복문 시작 -->\r\n");
      out.write("		");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!-- 반복문 끝 -->\r\n");
      out.write("\r\n");
      out.write("	</form>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"10\">\r\n");
      out.write("			<hr size=\"1\" color=\"CCCCCC\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td height=\"30\">\r\n");
      out.write("	</tr>\r\n");
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td align=\"center\" colspan=\"5\"><a class=\"a_black\"\r\n");
      out.write("			href=\"\"> 전체 주문하기 </a>&nbsp;&nbsp;&nbsp;&nbsp; \r\n");
      out.write("			<button id=\"deleteAll\"> 전체 삭제하기 </button>&nbsp;&nbsp;&nbsp;&nbsp; <!-- form 밖이어서 submit 안되지만, 체크된 항목의 num값을 넘겨주기 위해 submit 필요 -->\r\n");
      out.write("			<a class=\"a_black\" href=\"\"> 계속 쇼핑하기 </a>&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td height=\"20\">\r\n");
      out.write("	</tr>\r\n");
      out.write("\r\n");
      out.write("</table>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/goods/cartList.jsp(145,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("dto");
      // /WEB-INF/views/goods/cartList.jsp(145,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/goods/cartList.jsp(145,2) '${ cartList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${ cartList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/goods/cartList.jsp(145,2) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\r\n");
            out.write("		<tr>\r\n");
            out.write("			<td class=\"td_default\" width=\"80\">\r\n");
            out.write("			\r\n");
            out.write("			<!-- checkbox는 체크된 값만 서블릿으로 넘어간다. 따라서 value에 삭제할 num값을 설정한다. -->\r\n");
            out.write("			<!-- 이름은(name) check 하나지만 value는 여러개가 된다.(num값마다 다르니까) -->\r\n");
            out.write("			<!-- url 표시 되는 모습 -> check=(num) -->\r\n");
            out.write("			<input type=\"checkbox\" name=\"check\" class=\"check\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("			</td>\r\n");
            out.write("			\r\n");
            out.write("			<td class=\"td_default\" width=\"80\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("			<td class=\"td_default\" width=\"80\"><img\r\n");
            out.write("				src=\"images/items/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.gImage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(".gif\" border=\"0\" align=\"center\"\r\n");
            out.write("				width=\"80\" /></td>\r\n");
            out.write("			<td class=\"td_default\" width=\"300\" style='padding-left: 30px'>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.gName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("				<br> <font size=\"2\" color=\"#665b5f\">[옵션 : 사이즈(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.gSize}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")\r\n");
            out.write("					, 색상(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.gColor}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")]\r\n");
            out.write("			</font></td>\r\n");
            out.write("			<td class=\"td_default\" align=\"center\" width=\"110\" >\r\n");
            out.write("			<!-- price값 얻는 방법1 : span태그 추가해 price값 얻기 -->\r\n");
            out.write("			<span id=\"gPrice");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write('￦');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.gPrice}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span> <!-- price값을 가져오기 위해 span태그 추가 -->\r\n");
            out.write("			\r\n");
            out.write("			</td>\r\n");
            out.write("			<td class=\"td_default\" align=\"center\" width=\"90\">\r\n");
            out.write("			<input class=\"input_default\" type=\"text\" name=\"gAmount\"\r\n");
            out.write("				id=\"gAmount");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" style=\"text-align: right\" maxlength=\"3\"\r\n");
            out.write("				size=\"2\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.gAmount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"></input></td> <!-- gAmount id를 구별하기 위해 num 추가 -->\r\n");
            out.write("				\r\n");
            out.write("				\r\n");
            out.write("			<!-- 반복문 => 수정 버튼의 아이디가 모두 같음 => 따라서 아이디 대신 클래스 사용 -->\r\n");
            out.write("			<!-- 클래스를 구별하기 위해 커스텀 속성 추가 => num값으로 구별 -->\r\n");
            out.write("			<td><input type=\"button\" value=\"수정\" class=\"updateBtn\" data-num=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"/></td> \r\n");
            out.write("			\r\n");
            out.write("			<td class=\"td_default\" align=\"center\" width=\"80\" style='padding-left: 5px'>\r\n");
            out.write("				<span id=\"sum");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" data-price=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.gPrice}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"> <!-- sum 아이디 구별을 위해 num값 이용 -->\r\n");
            out.write("				￦");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.gPrice * dto.gAmount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(" <!-- price값 얻는 방법2 : 커스텀속성을 통해 price값 얻기 -->\r\n");
            out.write("				</span>\r\n");
            out.write("			</td>\r\n");
            out.write("			<td>\r\n");
            out.write("				<!-- 삭제 처리와 비슷 / input type button은 기본적으로 submit 안됨(jquery로 설정하여 submit은 가능)-->\r\n");
            out.write("				<input type=\"button\" value=\"주문\" class=\"orderBtn\" data-num=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("			</td>\r\n");
            out.write("			<td class=\"td_default\" align=\"center\" width=\"30\"\r\n");
            out.write("				style='padding-left: 10px'>\r\n");
            out.write("				<!-- 수정과 마찬가지로 id로는 중복이 생겨 class로 처리, 커스텀속성으로 num값 얻기 -->\r\n");
            out.write("				<input type=\"button\" value=\"삭제\" class=\"deleteBtn\" data-num=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"></td>\r\n");
            out.write("			<td height=\"10\"></td>\r\n");
            out.write("		</tr>\r\n");
            out.write("\r\n");
            out.write("		");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
